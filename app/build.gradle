apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "com.stedi.multitouchpaint"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 8
        versionName "2.6"
        manifestPlaceholders = [crashlyticsKey: getLocalProperty("crashlyticsKey")]
    }

    signingConfigs {
        release {
            def storeFileProp = getLocalProperty('storeFile')
            if (!storeFileProp.isEmpty()) {
                storeFile = file(storeFileProp)
                keyAlias = getLocalProperty('keyAlias')
                storePassword = getLocalProperty('storePassword')
                keyPassword = getLocalProperty('keyPassword')
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-DBG"
        }
        release {
            ext.enableCrashlytics = true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.0"

    implementation 'com.android.support:support-v4:26.1.0'
    implementation "com.github.danielnilsson9:color-picker-view:1.4.0@aar"

    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }
}

def getLocalProperty(String propertyName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        def retProp = props[propertyName]
        return retProp != null ? retProp : ""
    }
    return ""
}